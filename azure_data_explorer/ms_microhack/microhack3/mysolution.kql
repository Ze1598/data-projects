// Challenge 7
// Task 1: Create a materialized view
.create materialized-view LogisticsTelemetryLatest on table LogisticsTelemetry 
{
    LogisticsTelemetry 
    | summarize arg_max(enqueuedTime, *) by deviceId
} 


// Task 2: Materialized views queries
// .show materialized-view LogisticsTelemetryLatest
LogisticsTelemetryLatest | take 10

materialized_view("LogisticsTelemetryLatest")


// Task 3: User defined Functions (Stored Functions)
.create-or-alter function 
with (docstring = 'Task 3: User defined Functions (Stored Functions)', folder='microhack')
Task3UDF()  {
    LogisticsTelemetry
    | where deviceId startswith "x"
    | summarize count_ = count() by deviceId
    | render piechart 
}


// Task 4: Create an external table
// MSI auth
.create external table ['ExtTableDemo'] (
        ['VendorID']:long,['tpep_pickup_datetime']:datetime,['tpep_dropoff_datetime']:datetime,['passenger_count']:long,['trip_distance']:real,['RatecodeID']:long,['store_and_fwd_flag']:string,['PULocationID']:long,['DOLocationID']:long,['payment_type']:long,['fare_amount']:real,['extra']:real,['mta_tax']:real,['tip_amount']:real,['tolls_amount']:real,['improvement_surcharge']:real,['total_amount']:real,['congestion_surcharge']:real
    )
    kind = blob
    dataformat = csv
    (
        h@'https://iotmonitoringsa6810.blob.core.windows.net/data;impersonate'
    )
    with (
        FileExtension='csv'
        ,IncludeHeaders='All'
    )

external_table("ExtTableDemo")
| take 10



// Challenge 8: Caching and retention policies
// Task 1: Change the cache policy via the Azure portal (data base level)
// Azure portal > ADX cluster > Databases > target database > Edit > update cache policy

// Task 2: change the cache policy via commands (data base or table level)
.alter table LogisticsTelemetry policy caching hot = 30d

// Task 3: Query cold data with hot windows
.show table LogisticsTelemetry policy caching

.alter table LogisticsTelemetry policy caching 
        hot = 14d,
        hot_window = datetime(2021-01-01) .. datetime(2021-02-01),
        hot_window = datetime(2021-04-01) .. datetime(2021-05-01)


LogisticsTelemetry
| take 100



// Challenge 9
// Task 1: .show/diagnostic logs/Insights
// https://learn.microsoft.com/en-us/azure/data-explorer/kusto/management/
.show queries

.show commands

.show journal

.show tables details

.show tables;
$command_results
| count

.set MyCtasTable <|
LogisticsTelemetry
| project deviceId, enqueuedTime


// Task 2: Use .show queries
.show queries;
$command_results
| where User == 'live.com#jose.fernando.costa.1998@gmail.com'
| where StartedOn >= ago(7d)
| count


// Task 3: Use .journal commands
.show journal;
$command_results
| where 
    Event == 'CREATE-MATERIALIZED-VIEW'
    and EntityName == 'LogisticsTelemetryLatest'
| project EventTimestamp


// Task 4: Use .show commands
.show commands;
$command_results
| where User == 'live.com#jose.fernando.costa.1998@gmail.com'
| where StartedOn >= ago(7d)
| count


// Task 5: Table details and size
.show tables details;
$command_results
| extend TotalOriginalSizeMB = format_bytes(TotalOriginalSize, 0, "MB")
| extend TotalExtentSizeInMB = format_bytes(TotalExtentSize, 0, "MB")
| project
    TableName
    ,TotalOriginalSizeMB
    ,TotalExtentSizeInMB


// Challenge 10: Cluster Autoscaling
// Task 1: Manage cluster horizontal scaling (scale in/out)
// Azure portal > ADX cluster > Settings > Scale out > Optimized autoscale


// Task 2: Manage cluster vertical scaling (scale up/down)
// Azure portal > ADX cluster > Settings > Scale up > Choose SKU (takes up to 30 minutes)


// Challenge 11: Security (Access control)
// Task 1: Security roles management
.show table LogisticsTelemetryManipulated principals


// Task 2: Assigning roles using KQL
// No need to specify AAD tenant for UPN, as Kusto performs the resolution by itself
.add database adxtrainingdbjc viewers ('aaduser=testuser123@josefernandocosta1998gmail.onmicrosoft.com') 'Test user (AAD)'


// Task 3: Assigning roles using the Azure portal
// Azure portal > ADX cluster > Settings > Databases > Database > Overview > Permissions > update permissions


// Challenge 12: Row Level Security (RLS)
.create-or-alter function DemoRlsPolicy (){
    let IsInGroup = current_principal_is_member_of('aadgroup=somegroup@fake_domain.com');
    LogisticsTelemetryManipulated | where (IsInGroup);
}

.alter table LogisticsTelemetryManipulated policy row_level_security enable "DemoRlsPolicy"


.create-or-alter function TestRlsPolicy (){
    let IsInGroup = current_principal_details().ObjectId <> '5de264ea-de38-401e-9b06-0d623750921b';
    LogisticsTelemetryManipulated | where (IsInGroup);
}

.alter table LogisticsTelemetryManipulated policy row_level_security enable "TestRlsPolicy"